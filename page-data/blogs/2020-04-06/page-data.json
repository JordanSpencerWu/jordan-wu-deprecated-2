{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/blogs/2020-04-06/","result":{"data":{"markdownRemark":{"html":"<p>If you want to write beautiful math equations on your website and you're using Gatsby. This is the tutorial for you! In this blog post I will show how to get started.</p>\n<h3>Getting Started</h3>\n<p>First you would need to download the required Gatsby plugins that you can find in their plugin's library.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save gatsby-transformer-remark gatsby-remark-mathjax</code></pre></div>\n<p>After downloading the required dependencies, you need to include the plugin in your <code class=\"language-text\">plugins</code> option in your <code class=\"language-text\">gatsby-config.js</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// in your gatsby-config.js</span>\nplugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    resolve<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-transformer-remark</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-remark-mathjax</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Notice that it's inside your <code class=\"language-text\">gatsby-transformer-remark</code> plugin, it's used along with our markdown plugin. You probably think that is all you have to do to get beautiful math equations on your web page... That was what I thought after going through this process on the <code class=\"language-text\">gatsby-remark-mathjax</code> plugin documentation.</p>\n<p>Unfortunately, there's a few more steps before we can write the quadratic formula, we all know and love.</p>\n<p>We have to download the MathJax library, there are a few ways to do this. I prefer using the CDN which stands for Content Delivery Network. This allows us to download files from the web using a <code class=\"language-text\">script</code> tag in our <code class=\"language-text\">head</code> element.</p>\n<p>Let's get to it! If you went through the Gatsby tutorial, you would know we use <code class=\"language-text\">react-helmet</code> to add scripts into our <code class=\"language-text\">head</code> element. To add our CDN script we will be using the <code class=\"language-text\">script</code> property that the <code class=\"language-text\">Helmet</code> component has. This property takes in an array of scripts, so let's define our array.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> scripts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"text/x-mathjax-config\"</span><span class=\"token punctuation\">,</span>\n    innerHTML<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    window.MathJax.Hub.Config({\n    extensions: [\"tex2jax.js\"],\n    jax: [\"input/TeX\", \"output/HTML-CSS\"],\n    tex2jax: {\n      inlineMath: [ ['$','$'], [\"\\\\(\",\"\\\\)\"] ],\n      displayMath: [ ['$$','$$'], [\"\\\\[\",\"\\\\]\"] ],\n      processEscapes: true,\n      tex2jax: {preview: \"none\"}\n    },\n    \"HTML-CSS\": { availableFonts: [\"TeX\"] },\n    messageStyle: \"none\"\n  });</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">text/javascript</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    src<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>The first element in the array is our MathJax configuration settings which allow us to define our delimiter for inline and display mode. As you can see there are two ways to generate our math equation, I will demonstrate it later in this blog. The next and last element is the CDN link to download a minified MathJax file. We need the library to know how to replace our TeX/LaTeX syntax with web fonts or SVG.</p>\n<p>Now time to add this to our <code class=\"language-text\">Helmet</code> component!</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Helmet</span> <span class=\"token attr-name\">script</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{scripts}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Helmet</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Ok now we have everything we need to write our math equation! However, our React component loads faster than our MathJax library. To fix this we need to tell our React component to invoke MathJax once it's loaded using the <code class=\"language-text\">useEffect</code> hook. We would add this hook to the React component that renders our markdown files.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span>MathJax <span class=\"token operator\">&amp;&amp;</span> window<span class=\"token punctuation\">.</span>MathJax<span class=\"token punctuation\">.</span>Hub<span class=\"token punctuation\">.</span><span class=\"token function\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Typeset\"</span><span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">.</span>MathJax<span class=\"token punctuation\">.</span>Hub<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Displaying Beautiful Mathematical Equations!</h3>\n<p>There are two types of equations you can create using the TeX/LaTeX syntax: ones occur within a paragraph inline and the other for displaying the equation in a larger format. For the inline format we will use <code class=\"language-text\">$</code> and for the display mode we will use <code class=\"language-text\">$$</code>. Now let's write the quadratic formula!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\n\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$</code></pre></div>\n<p>When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are</p>\n<p>$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$</p>\n<p>Now you should be able to write math equations on your Gatsby website!</p>","frontmatter":{"seo_description":"This is a tutorial on how to add Mathjax to your Gatsby website.","title":"How To Add MathJax To Your Gatsby Website"}}},"pageContext":{"slug":"/blogs/2020-04-06/"}}}