{"componentChunkName":"component---src-templates-book-note-index-tsx","path":"/books/introduction-to-algorithms/priority-queues/","result":{"data":{"markdownRemark":{"html":"<p>One of the most popular applications of a heap: as an efficient <em>priority queue</em>. Priority queues come in two forms: <em>max-priority queues</em> and <em>min-priority queues</em>. In a given application, such as job scheduling or event-driven simulation, element of a priority queue correspond to objects in the application.</p>\n<p>A <strong>priority queue</strong> is a data structure for maintaining a set $S$ of elements, each with an associated value called a <strong>key</strong>. A <strong>max-priority queue</strong> supports the following operations:</p>\n<p>$INSERT(S,x)$ inserts the element $x$ into the set $S$, which is equivalent to the operation $S = S \\cup {x}$.</p>\n<p>$MAXIMUM(S)$ removes and returns the element of $S$ with the largest key.</p>\n<p>$EXTRACT-MAX(S)$ removes and returns the element of $S$ with the largest key.</p>\n<p>$INCREASE-KEY(S,x,k)$ increases the value of element $x's$ key to the new value $k$, which is assumed to be at least as large as $x's$ current key value.</p>\n<p>When we use a heap to implement a priority queue, we often need to store a <strong>handle</strong> to the corresponding application object in each heap element. The exact makeup of the handle such as a pointer or an integer depends on the application.</p>\n<h5>HEAP-MAXIMUM A</h5>\n<p>The procedure $HEAP-MAXIMUM$ implements the <strong>MAXIMUM</strong> operation in $\\Theta(1)$.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token keyword\">return</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h5>HEAP-EXTRACT-MAX A</h5>\n<p>The procedure <strong>HEAP-EXTRACT-MAX</strong> implements the <strong>EXTRACT-MAX</strong> operation, the running time of <strong>HEAP-EXTRACT-MAX</strong> is $\\Theta(lg \\\\ n)$.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  <span class=\"token keyword\">if</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>heap<span class=\"token operator\">-</span>size <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span>\n    error <span class=\"token string\">\"heap underflow\"</span>\n  max <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n  <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>heap<span class=\"token operator\">-</span>size<span class=\"token punctuation\">]</span>\n  <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>heap<span class=\"token operator\">-</span>size <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>heap<span class=\"token operator\">-</span>size <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n  MAX<span class=\"token operator\">-</span><span class=\"token function\">HEAPIFY</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> max</code></pre></div>\n<h5>HEAP-INCREASE-KEY A,i,key</h5>\n<p>The procedure <strong>HEAP-INCREASE-KEY</strong> implements the <strong>INCREASE-KEY</strong> operation. An index $i$ into the array identifies the priority-queue element whose key we wish to increase. The procedure first updates the key of element $A[i]$ to its new value. Because increasing the key of $A[i]$ might violate the max-heap property, the procedure then, traverses a simple path from this node toward the root to find a proper place for the newly increased key. As <strong>HEAP-INCREASE-KEY</strong> traverses this path, it repeatedly compares an element to its parent, exchanging their keys and continuing if the element's key is larger,, and terminating if the element's key is smaller, since the max-heap property now holds. The running time is $\\Theta(lg \\\\ n)$.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  <span class=\"token keyword\">if</span> key <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    error <span class=\"token string\">\"new key is smaller than current key\"</span>\n  <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key\n  <span class=\"token keyword\">while</span> i <span class=\"token operator\">></span> <span class=\"token number\">1</span> and <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span><span class=\"token function\">PARENT</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n    exchange <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">with</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span><span class=\"token function\">PARENT</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    i <span class=\"token operator\">=</span> <span class=\"token function\">PARENT</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n<h5>MAX-HEAP-INSERT A,key</h5>\n<p>This procedure is an <em>insert</em> operation, it takes as an input the key of the new element to be inserted into max-heap $A$, The procedure first expands the max-heap by adding to the tree a new leaf whose key is $- \\infty$. Then it calls <strong>HEAP-INCREASE-KEY</strong> to set the key of this new node to its correct value and maintain the max-heap property. The running time is $\\Theta(lg \\\\ n)$.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>heap<span class=\"token operator\">-</span>size <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>heap<span class=\"token operator\">-</span>size <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n  <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>heap<span class=\"token operator\">-</span>size<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>INFTY\n  HEAP<span class=\"token operator\">-</span>INCREASE<span class=\"token operator\">-</span><span class=\"token function\">KEY</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>heap<span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span></code></pre></div>\n<h5>Java Implementation Using Figure 6.5 In Book</h5>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> heapSizeMaxIndex<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> maxHeapArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n          heapSizeMaxIndex <span class=\"token operator\">=</span> maxHeapArray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">maximum</span><span class=\"token punctuation\">(</span>maxHeapArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">heapExtractMax</span><span class=\"token punctuation\">(</span>maxHeapArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">printHeap</span><span class=\"token punctuation\">(</span>maxHeapArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">heapIncreaseKey</span><span class=\"token punctuation\">(</span>maxHeapArray<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">printHeap</span><span class=\"token punctuation\">(</span>maxHeapArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">maxHeapInsert</span><span class=\"token punctuation\">(</span>maxHeapArray<span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">printHeap</span><span class=\"token punctuation\">(</span>maxHeapArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token comment\">// returns 15</span>\n          <span class=\"token comment\">// removes 15 from heap</span>\n          <span class=\"token comment\">// 13 12 9 5 6 8 7 4 0 1 2</span>\n          <span class=\"token comment\">// 15 13 9 12 6 8 7 4 5 1 2</span>\n          <span class=\"token comment\">// 16 13 15 12 6 9 7 4 5 1 2 8</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">maximum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"returns \"</span> <span class=\"token operator\">+</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">heapExtractMax</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>heapSizeMaxIndex <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"heap underflow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">int</span> rootIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n          array<span class=\"token punctuation\">[</span>rootIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>heapSizeMaxIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          heapSizeMaxIndex <span class=\"token operator\">=</span> heapSizeMaxIndex <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">maxHeapify</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>rootIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"removes \"</span> <span class=\"token operator\">+</span> max <span class=\"token operator\">+</span> <span class=\"token string\">\" from heap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">maxHeapify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> parentIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">int</span> leftChildIndex <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>parentIndex <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">int</span> rightChildIndex <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>parentIndex <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">int</span> indexOfLargestValue <span class=\"token operator\">=</span> parentIndex<span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>leftChildIndex <span class=\"token operator\">&lt;=</span> heapSizeMaxIndex <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>leftChildIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>indexOfLargestValue<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              indexOfLargestValue <span class=\"token operator\">=</span> leftChildIndex<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rightChildIndex <span class=\"token operator\">&lt;=</span> heapSizeMaxIndex <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>rightChildIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>indexOfLargestValue<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              indexOfLargestValue <span class=\"token operator\">=</span> rightChildIndex<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>indexOfLargestValue <span class=\"token operator\">!=</span> parentIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>parentIndex<span class=\"token punctuation\">,</span>indexOfLargestValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token function\">maxHeapify</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> indexOfLargestValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> firstIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> secondIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>firstIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          array<span class=\"token punctuation\">[</span>firstIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>secondIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          array<span class=\"token punctuation\">[</span>secondIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">heapIncreaseKey</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> currentKeyIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> newKeyIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newKeyIndex <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">[</span>currentKeyIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new key is smaller than current key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">int</span> parentIndex <span class=\"token operator\">=</span> <span class=\"token function\">getParentIndex</span><span class=\"token punctuation\">(</span>currentKeyIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          array<span class=\"token punctuation\">[</span>currentKeyIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newKeyIndex<span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>currentKeyIndex <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>parentIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">[</span>currentKeyIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>currentKeyIndex<span class=\"token punctuation\">,</span>parentIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              currentKeyIndex <span class=\"token operator\">=</span> <span class=\"token function\">getParentIndex</span><span class=\"token punctuation\">(</span>currentKeyIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              parentIndex <span class=\"token operator\">=</span> <span class=\"token function\">getParentIndex</span><span class=\"token punctuation\">(</span>currentKeyIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getParentIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">maxHeapInsert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          heapSizeMaxIndex <span class=\"token operator\">=</span> heapSizeMaxIndex <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n          array<span class=\"token punctuation\">[</span>heapSizeMaxIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MIN_VALUE<span class=\"token punctuation\">;</span>\n          <span class=\"token function\">heapIncreaseKey</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>heapSizeMaxIndex<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printHeap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> heapSizeMaxIndex<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"author":["Thomas H. Cornmen","And","Charles E Leiserson","And","Ronald L. Riverest","And","Clifford Stein"],"seo_description":"Introduction to Algorithms by Thomas H. Cornmen and Charles E Leiserson and Ronald L. Riverest and Clifford Stein notes.","title":"Priority Queues"}}},"pageContext":{"slug":"/books/introduction-to-algorithms/priority-queues/"}},"staticQueryHashes":["1584199405","4008572679"]}