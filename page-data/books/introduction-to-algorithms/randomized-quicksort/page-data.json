{"componentChunkName":"component---src-templates-book-note-index-tsx","path":"/books/introduction-to-algorithms/randomized-quicksort/","result":{"data":{"markdownRemark":{"html":"<p>Instead of always using $A[r]$ as the pivot, we will select a randomly chosen element from the subarray $A[p..r]$. We do so by first exchanging element $A[r]$ with an element chosen at random from $A[p..r]$. By randomly sampling the range $p,...,r$, we ensure that the pivot element $x = A[r]$ is equally likely to be any of the $r - p + 1$ elements in the subarray. Because we randomly choose the pivot element, we expect the split of the input array to be reasonably well balanced on average.</p>\n<h5>RANDOMIZED-PARTITION A,p,r</h5>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  i <span class=\"token operator\">=</span> <span class=\"token function\">RANDOM</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span>\n  exchange <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token keyword\">with</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">PARTITION</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The new quicksort calls <strong>RANDOMIZED-PARTITION</strong> in place of <strong>PARTITION</strong>, note that <strong>PARTITION</strong> is inside &#x3C;a href=\"{{ \"/quick-sort/\" | prepend: site.baseurl }}\"><strong>Quicksort</strong></a> notes.</p>\n<h5>RANDOMIZED-QUICKSORT A,p,r</h5>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  <span class=\"token keyword\">if</span> p <span class=\"token operator\">&lt;</span> r\n    q <span class=\"token operator\">=</span> RANDOMIZED<span class=\"token operator\">-</span><span class=\"token function\">PARTITION</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span>\n    RANDOMIZED<span class=\"token operator\">-</span><span class=\"token function\">QUICKSORT</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    RANDOMIZED<span class=\"token operator\">-</span><span class=\"token function\">QUICKSORT</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">,</span>q <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The worst case running time happens on the worst partitioning case which produces $\\Theta(n^2)$. The expected running time of this algorithm is $\\Theta(n \\\\ lg \\\\ n)$.</p>\n<h5>Java Implementation</h5>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n          <span class=\"token class-name\">RandomizedQuickSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>array<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">printArray</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">// return 2 4 5 6 7 8 9 11 12 13 19 21</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">RandomizedQuickSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> startIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> endIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>startIndex <span class=\"token operator\">&lt;</span> endIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">int</span> pivot <span class=\"token operator\">=</span> <span class=\"token function\">randomizedPartition</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>startIndex<span class=\"token punctuation\">,</span>endIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token class-name\">RandomizedQuickSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>startIndex<span class=\"token punctuation\">,</span>pivot <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token class-name\">RandomizedQuickSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>pivot <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>endIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">randomizedPartition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> startIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> endIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">int</span> randomEndIndex <span class=\"token operator\">=</span> <span class=\"token function\">randomNumberBetween</span><span class=\"token punctuation\">(</span>startIndex<span class=\"token punctuation\">,</span>endIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>endIndex<span class=\"token punctuation\">,</span>randomEndIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>startIndex<span class=\"token punctuation\">,</span>endIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">randomNumberBetween</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> startNumber<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> endNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>endNumber <span class=\"token operator\">-</span> startNumber <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> startNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> startIndex<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> endIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">int</span> pivotValue <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>endIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">int</span> pivotIndex <span class=\"token operator\">=</span> startIndex<span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> startIndex<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> endIndex<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> pivotValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>pivotIndex<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                  pivotIndex <span class=\"token operator\">=</span> pivotIndex <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>pivotIndex<span class=\"token punctuation\">,</span>endIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> pivotIndex<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> firstIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> secondIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>firstIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          array<span class=\"token punctuation\">[</span>firstIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>secondIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          array<span class=\"token punctuation\">[</span>secondIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"author":["Thomas H. Cornmen","And","Charles E Leiserson","And","Ronald L. Riverest","And","Clifford Stein"],"seo_description":"Introduction to Algorithms by Thomas H. Cornmen and Charles E Leiserson and Ronald L. Riverest and Clifford Stein notes.","title":"Randomized Quicksort"}}},"pageContext":{"slug":"/books/introduction-to-algorithms/randomized-quicksort/"}}}