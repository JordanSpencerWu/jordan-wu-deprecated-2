{"componentChunkName":"component---src-templates-book-note-index-tsx","path":"/books/introduction-to-algorithms/insertion-sort/","result":{"data":{"markdownRemark":{"html":"<p>This is an efficient algorithm for sorting a small number of elements, using the <strong>incremental</strong> approach: having sorted the subarray $A[1..j - 1]$, we inserted the single element $A[j]$ into its proper place, yielding the sorted subarray $A[1..j]$.</p>\n<p><strong>Input</strong>: A sequence of $n$ numbers $<a_1,a_2,\\cdots,a_n>$</p>\n<p><strong>Ouput</strong>: A permutation reordering $<a'_1,a'_2,\\cdots,a'n>$ of the input sequence such that $a'_1 \\leq a'_2 \\leq \\cdots \\leq a'_n$.</p>\n<p><strong>Description</strong>: Insertion sort works the way many people sort a hand of playing cards. We start with an empty left hand and the cards face down on the table. We then remove one card at a time from the table and insert it into the correct position in the left hand.To find the correct position for a card, we compare it with each of the cards already in the hand, right to left. At all times, the cards held in the left hand are sorted, and these cards were originally the top cards of the pile on the table.</p>\n<h5>INSERTION-SORT A</h5>\n<p>This <em>pseudocode</em> takes as a parameter an array $A[1..n]$ containing a sequence of length $n$ that is to be sorted. The algorithm sorts the input numbers <strong>in place</strong>: it rearranges the numbers within the array.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  <span class=\"token keyword\">for</span> j <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token keyword\">to</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">.</span>length\n    key <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n    <span class=\"token comment\">// Insert A[j] into the sorted sequence A[1..j-1].</span>\n    i <span class=\"token operator\">=</span> j <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span> and <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> key\n      <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n      i <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token class-name\">A</span><span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key</code></pre></div>\n<p>The index $j$ indicates the \"current card\" being inserted into the subarray consisting of elements $A[1..j - 1]$ currently sorted array. The remaining subarray $A[j + 1..n]$ corresponds to the unordered array.</p>\n<blockquote>\n<p>Elements $A[1..j - 1]$ are the elements <em>originally</em> in positions $1$ through $j - 1$, but now in sorted order, this is known as <strong>loop invariant</strong></p>\n</blockquote>\n<p>The best-case occurs if the array is already sorted and the best-case running time will be a <strong>linear function</strong> of $n$, $\\Theta(n)$.</p>\n<p>The worst-case occurs when the array is in reverse sorted order and the worst-case running time is a <strong>quadratic function</strong> of $n$, $\\Theta(n^2)$.</p>\n<h5>Java Implementation Using Figure 2.2 In Book</h5>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> unsortedArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">insertionSort</span><span class=\"token punctuation\">(</span>unsortedArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printArray</span><span class=\"token punctuation\">(</span>unsortedArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// returns 1 2 3 4 5 6</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertionSort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            key <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            i <span class=\"token operator\">=</span> j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                array<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                i <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            array<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"author":["Thomas H. Cornmen","And","Charles E Leiserson","And","Ronald L. Riverest","And","Clifford Stein"],"seo_description":"Introduction to Algorithms by Thomas H. Cornmen and Charles E Leiserson and Ronald L. Riverest and Clifford Stein notes.","title":"Insertion Sort"}}},"pageContext":{"slug":"/books/introduction-to-algorithms/insertion-sort/"}},"staticQueryHashes":["1584199405","4008572679"]}