{"componentChunkName":"component---src-templates-book-note-index-tsx","path":"/books/soft-skills/","result":{"data":{"markdownRemark":{"html":"<p>This book was an eye opener in a way that made me think about being a software developer. Like many software developer, we all strive to improve our software craftsmanship. We should treat our software development careers as a business. The services we provide to a company is our own skills and it belongs to us. Think of the company that youâ€™re working for as a client and we're selling the service of developing software to them. Just like a company is providing products or services to their customers. The book emphasis on having a business mindset which will in turn makes us better software developers. All businesses have a goal in mind from creating a product to providing services. We as software developers should set goals to reach somewhere in our career.</p>\n<p>I noticed that if I don't have a purpose or direction, I tend to lose focus and interest. After graduating college, I decided to pursue a career in software engineering. I enjoy programming and wanted to do that for a living. I didn't touch programming until my early twenties while taking an introduction to C++ at a community college. I didn't like programming in the beginning, I didn't know any jargons and was very slow at writing programs. I learned everything from reading a book called <em>C++ For Engineers &#x26; Scientists</em> Third Edition by Gary J. Bronson. This book gave me a better understanding of the programming fundamental that all languages shared. I didn't focus too much on programming, but it was something I kept seeing while attending college. MATLAB was what I learned after C++, this software is used in engineering to solve any mathematical problem. I used this software in some of my labs and started to understand how to write and read code. I started to see the big picture of creating programs that solves problems. I wanted to learn more about programming, so I took two more computer science courses at a community college. This time I learn Java, along with Object Orient Programming and Data Structures. I started to see programming differently after taking these courses. As I learn more about programming, I start to understand how computer works. One elective course I took at a university was <em>Computer Organization and Design</em>, this was one of my favorite courses in college. Right after college I decided to focus on becoming a software engineer.</p>\n<p>The book talks about setting goals and tracking them. My current goal is to become a software engineer and to constantly improve my software craftsmanship. Something I noticed while looking for jobs is that there are many technologies used in this industry. My focus is becoming a full-stack software engineer, I want to learn both the front-end and back-end in web development. The main factor in choosing this career path is that I will be a lifelong learner. I enjoy learning new technologies and solving problems. There's much to learn in software engineering that I needed a way to track my progress. The book recommend blogging as a ways to track your progress and is a great way to market yourself. I created this blog to keep track of my progress and to market myself to companies.</p>\n<p>It's important to market yourself and to build your own brand. Just like a business brand, we can create our own personal brand by picking an audience and a specialization. I didn't know anything about branding until I read the chapter <em>Marketing yourself</em>. Creating a successful blog is one of the best mediums that a software developer can use to market themselves. A blog is a cheap and easy way to market yourself and it's the best way for getting name out there in the world. You are able to use a blog as part of your resume and for the employer to get to know who you are. I created my own blog using Jekyll and hosted it on Github. There are many ways to create a blog and I picked Jekyll because I have more control over my blog site. I started writing blogs about technologies I'm currently learning and to promote active learning.</p>\n<p>What I learned from college apart from solving problems is learning how to learn. The book talked about whether or not you need a degree to become a software developer. My personal view on this is no. You do not need a degree in computer science to be a software developer. However I recommend getting a technical degree if you're not a self-starter. I wasn't a self-starter and while attending college I started to learn how to read textbooks. I learn how to understand theorems and how to apply them to solve problems. Obtaining a technical degree will improve your problem solving skills and keep you motivated in learning. I noticed early in my college life that I learn from reading textbooks and not from attending lectures. Most of my life I didn't like learning and was bored in school. I was the kid that struggle in school and would sleep in all my classes. The major turning point in my life was when I decided to major in Electrical Engineering. It was the best decision I ever made in my life. What I learned after college is how to continue learning on my own.</p>\n<p>The book has a chapter call <em>Learning how to learn: How to teach yourself</em>. This is probably the most important skill that all software developer have. Learning something new can be intimidating at first. I remember that feeling while taking Calculus in college, note if I didn't pursue a technical degree I would've avoided this subject all my life. Calculus sounds complicated and complex. I was afraid of Calculus based on what other people had said about it. Calculus is like anything you learn in life. It a subject that can be learned and it takes time to learn it. As a student that struggle in school, I avoided hard subjects. After taking Calculus I realized that learning wasn't so bad and that I was able to learn from reading the textbook and doing the exercises. What I realized now in my life is that learning can be fun and exciting. One skill I'm constantly working on is becoming a quick learner, I want to be able to learn technologies quickly. The book introduce a 10 step process for learning. What I learned from this process is to learn enough to do something useful. You can spend hours reading all the resources available, instead you should filter the resources to the ones that fits your needs.</p>\n<p>I like how the book makes a big emphasis on teaching. I know that the only way to understand something better is to be able to teach it to others. I created this blog to improve my technical writing skills along with learning how to teach. There are many blogs out there that teaches people certain skills. I learned certain technologies from reading blogs and doing tutorials online. I started blogging about technologies I am learning to teach people what I learned. I want to improve my teaching skills and to be a great mentor. The book goes over finding a mentor and becoming a mentor which is critical in becoming a software developer.</p>\n<p>What makes this book unique and amazing is that it has a chapter for <em>Fitness</em>. I have a gym membership ever since I was in high school. I enjoy going to the gym and working out, it a great way for me to relax and release stress. Over the years I tried my best to go to the gym as least four times a week. There are times where I get lazy and skip going to the gym, then I regret skipping the gym. I noticed that it's hard for me to gain mass and weight. I have the skinny genetics where I can eat anything I want without gaining any weight. Some people might think it's a good thing, but I personally want to gain weight. Fitness has always been important to me to the point of being as strong and fit as I can be. I enjoy reading this chapter that promotes fitness along with being a software developer.</p>\n<p>This book was a great read. There are many things in the book that I didn't talk about and only went through some of the topics that I can relate to. This book help me understand how to enjoy life while being a software developer.</p>","frontmatter":{"author":["John Sonmez"],"seo_description":"Soft skills - the software developer's life manual by John Sonmez notes.","title":"Soft Skills - The Software Developer's Life Manual"}}},"pageContext":{"slug":"/books/soft-skills/"}},"staticQueryHashes":["1584199405","4008572679"]}