{"version":3,"sources":["webpack:///./src/templates/book-note/index.tsx"],"names":["props","spring","useSpring","opacity","from","data","markdownRemark","frontmatter","author","title","seo_description","html","useEffect","window","MathJax","Hub","Queue","authorNames","join","SPACE","description","className","div","style","dangerouslySetInnerHTML","__html"],"mappings":"4FAAA,0FASe,mBAACA,GACd,IAAMC,EAASC,YAAU,CAAEC,QAAS,EAAGC,KAAM,CAAED,QAAS,KAExD,EAOIH,EANFK,KACEC,eAFJ,IAGMC,YAAeC,EAHrB,EAGqBA,OAAQC,EAH7B,EAG6BA,MAAOC,EAHpC,EAGoCA,gBAC9BC,EAJN,EAIMA,KAKNC,qBAAU,WAERC,OAAOC,SAAWD,OAAOC,QAAQC,IAAIC,MAAM,CAAC,UAAWH,OAAOC,QAAQC,SAGxE,IAAME,EAAcT,EAAOU,KAAKC,KAEhC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKV,MAAOA,EAAOW,YAAaV,IAChC,yBAAKW,UAAU,uBACb,kBAAC,IAASC,IAAV,CAAcC,MAAOtB,EAAQoB,UAAU,+BACrC,wBAAIA,UAAU,mBAAmBZ,GACjC,qCAAWQ,GACX,yBAAKO,wBAAyB,CAAEC,OAAQd,U","file":"component---src-templates-book-note-index-tsx-554dffd7f6061e627937.js","sourcesContent":["import React, { ReactElement, useEffect } from \"react\"\nimport { graphql } from \"gatsby\"\nimport { useSpring, animated } from \"react-spring\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport { SPACE } from \"../../utils/constants\"\nimport \"./style/index.less\"\n\nexport default (props): ReactElement => {\n  const spring = useSpring({ opacity: 1, from: { opacity: 0 } })\n\n  const {\n    data: {\n      markdownRemark: {\n        frontmatter: { author, title, seo_description },\n        html,\n      },\n    },\n  } = props\n\n  useEffect(() => {\n    // @ts-ignore\n    window.MathJax && window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub])\n  })\n\n  const authorNames = author.join(SPACE)\n\n  return (\n    <Layout>\n      <SEO title={title} description={seo_description} />\n      <div className=\"book-note-container\">\n        <animated.div style={spring} className=\"book-note-content-container\">\n          <h1 className=\"book-note-title\">{title}</h1>\n          <small>By {authorNames}</small>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </animated.div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        author\n        seo_description\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}